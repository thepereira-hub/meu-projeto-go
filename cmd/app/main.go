// Arquivo principal do programa (entrypoint)
// Conven√ß√£o de mercado: colocar em cmd/<nome-app>/main.go
package main

// Importa os pacotes necess√°rios
import (
	"fmt"
    
	"github.com/seu-usuario/meu-projeto-go/internal/fibonacci"
    "github.com/seu-usuario/meu-projeto-go/internal/imc"
)

// Fun√ß√£o principal do programa
func main() {
    fmt.Println("üöÄ Meu projeto em Go, com estrutura de mercado!")

    // Menu de op√ß√µes para o usu√°rio:
    fmt.Println("\nEscolha uma op√ß√£o:")
    fmt.Println("1 - Calcular Fibonacci")
    fmt.Println("2 - Calcular IMC (√çndice de Massa Corporal)")
    fmt.Print("Digite o n√∫mero da op√ß√£o desejada: ")

    var opcao int
    fmt.Scanln(&opcao)

    switch opcao {
    // case 1: cont√©m o c√°lculo do Fibonacci
    case 1:
        // vari√°vel para armazenar o n√∫mero inserido pelo usu√°rio;
        var n int

        // Conte√∫do exibido ao usu√°rio
        fmt.Print("Digite um n√∫mero para calcular o Fibonacci: ")
        
        // solicita a entrada de dados do usu√°rio
        fmt.Scanln(&n)

        fmt.Printf("Fibonacci de %d √©: %d\n", n, fibonacci.Fibonacci(n))
    // case 2: cont√©m o c√°lculo do IMC
    case 2:
        var peso, altura float64
        fmt.Print("Digite seu peso (kg): ")
        fmt.Scanln(&peso)
        fmt.Print("Digite sua altura (m): ")
        fmt.Scanln(&altura)
        resultado := imc.CalculaIMC(peso, altura)
        fmt.Printf("Seu IMC √©: %.2f\n", resultado)
    default:
        fmt.Println("Op√ß√£o inv√°lida.")
    }
}

 

